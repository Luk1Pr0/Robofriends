{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","actions.js","constants.js","reducers.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onRequestRobots","searchField","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","connect","searchRobots","requestRobots","err","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","initialStateSearch","initialStateRobots","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da611871.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({ name, email, id }) => {\r\n\t\r\n\treturn (\r\n\t\t<div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n\t\t\t<img alt=\"robot\" src={`https://robohash.org/${id}?size=200x200`}/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card.js\";\r\n\r\nconst CardList = ({ robots }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{ \r\n\t\t\trobots.map((user, i) => {\r\n\t\t\treturn (\r\n\t\t\t<Card\r\n\t\t\t\tkey={ i }\r\n\t\t\t\tid={robots[i].id}\r\n\t\t\t\tname={robots[i].name}\r\n\t\t\t\temail={robots[i].email }\r\n\t\t\t/>\r\n\t\t);\r\n\t\t})\r\n\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn (\r\n\t\t<div className=\"pa2\">\r\n\t\t\t<input\r\n\t\t\tclassName=\"pa3 ba b--green bg-lightest-blue\"\r\n\t\t\ttype=\"search\"\r\n\t\t\tplaceholder=\"Search Robots\"\r\n\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflowY: \"scroll\", border: \"1px solid red\", height: \"800px\"}}>\r\n\t\t\t{ props.children }\r\n\t\t</div>\r\n\t);  \r\n};\r\n\r\nexport default Scroll;","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({ hasError: true })\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn <h1>Oops, that is not good</h1>\r\n\t\t}\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CardList from \"../components/CardList.js\";\r\nimport SearchBox from \"../components/SearchBox.js\";\r\nimport Scroll from \"../components/Scroll.js\";\r\nimport ErrorBoundry from \"../components/ErrorBoundry.js\";\r\nimport \"./App.css\";\r\nimport { setSearchField, requestRobots } from \"../actions.js\";\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tsearchField: state.searchRobots.searchField,\r\n\t\trobots: state.requestRobots.robots,\r\n\t\tisPending: state.requestRobots.isPending,\r\n\t\terror: state.requestRobots.err\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tonSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n\t\tonRequestRobots: () => dispatch(requestRobots())\r\n\t}\r\n}\r\n\r\nclass App extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.onRequestRobots();\r\n\t}\r\n\r\n\trender () {\r\n\t\tconst { searchField, onSearchChange, robots, isPending } = this.props;\r\n\t\tconst filteredRobots = robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n\t\t\t})\r\n\t\treturn isPending ?\r\n\t\t\t<h1>Loading...</h1> :\r\n\t\t(\r\n\t\t\t<div className=\"tc\">\r\n\t\t\t\t<h1 className=\"f2\">RoboFriends</h1>\r\n\t\t\t\t<SearchBox searchChange={onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t\t</ErrorBoundry>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import {\r\n\tCHANGE_SEARCH_FIELD,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED\r\n} from \"./constants.js\";\r\n\r\nexport const setSearchField = (text) => ({\r\n\t\ttype: CHANGE_SEARCH_FIELD,\r\n\t\tpayload: text\t\r\n})\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n\tdispatch({ type: REQUEST_ROBOTS_PENDING });\r\n\tfetch(\"https://jsonplaceholder.typicode.com/users\")\r\n\t\t.then(response => response.json())\r\n\t\t\t.then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n\t\t.catch(err => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: err }))\r\n}","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\r\nexport const REQUEST_ROBOTS_PENDING = \"REQUEST_ROBOTS_PENDING\";\r\nexport const REQUEST_ROBOTS_SUCCESS = \"REQUEST_ROBOTS_SUCCESS\";\r\nexport const REQUEST_ROBOTS_FAILED = \"REQUEST_ROBOTS_FAILED\";","import {\r\n\tCHANGE_SEARCH_FIELD,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED\r\n} from \"./constants.js\";\r\n\r\nconst initialStateSearch = {\r\n\tsearchField: \"\"\r\n}\r\n\r\nexport const searchRobots = (state=initialStateSearch, action={}) => {\r\n\tswitch(action.type) {\r\n\t\tcase CHANGE_SEARCH_FIELD:\r\n\t\t\treturn Object.assign({}, state, {searchField:action.payload});\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nconst initialStateRobots = {\r\n\tisPending: false,\r\n\trobots: [],\r\n\terr: \"\"\r\n}\r\n\r\nexport const requestRobots = (state=initialStateRobots, action={}) => {\r\n\tswitch(action.type) {\r\n\t\tcase REQUEST_ROBOTS_PENDING:\r\n\t\t\treturn Object.assign({}, state, {isPending: true});\r\n\t\tcase REQUEST_ROBOTS_SUCCESS:\r\n\t\t\treturn Object.assign({}, state, {robots: action.payload, isPending: false});\r\n\t\tcase REQUEST_ROBOTS_FAILED:\r\n\t\t\treturn Object.assign({}, state, {error: action.payload, isPending: false})\r\n\t\tdefault:\r\n\t\t \treturn state;\r\n\t}\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport \"./index.css\";\nimport App from \"./containers/App.js\";\n// import * as serviceWorker from './serviceWorker';\nimport \"tachyons\";\nimport { searchRobots, requestRobots } from \"./reducers\";\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({searchRobots, requestRobots});\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App/>\n\t</Provider>\n\t,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}